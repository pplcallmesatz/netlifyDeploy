{"version":3,"sources":["webpack:///./src/templates/index-page.js","webpack:///./src/components/Features.js"],"names":["__webpack_require__","r","__webpack_exports__","d","IndexPageTemplate","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_Features__WEBPACK_IMPORTED_MODULE_3__","_components_BlogRoll__WEBPACK_IMPORTED_MODULE_4__","_ref","image","title","heading","subheading","mainpitch","description","intro","a","createElement","className","style","backgroundImage","childImageSharp","fluid","src","backgroundPosition","backgroundAttachment","display","height","lineHeight","justifyContent","alignItems","flexDirection","boxShadow","backgroundColor","color","padding","gridItems","blurbs","to","IndexPage","_ref2","frontmatter","data","markdownRemark","_components_PreviewCompatibleImage__WEBPACK_IMPORTED_MODULE_1__","FeatureGrid","map","item","key","text","width","imageInfo"],"mappings":"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","file":"component---src-templates-index-page-js-b4d2219fe6957e533af7.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Features from '../components/Features'\nimport BlogRoll from '../components/BlogRoll'\n\nexport const IndexPageTemplate = ({\n  image,\n  title,\n  heading,\n  subheading,\n  mainpitch,\n  description,\n  intro,\n}) => (\n  <div>\n    <div\n      className=\"full-width-image margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n        backgroundPosition: `top left`,\n        backgroundAttachment: `fixed`,\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          height: '150px',\n          lineHeight: '1',\n          justifyContent: 'space-around',\n          alignItems: 'left',\n          flexDirection: 'column',\n        }}\n      >\n        <h1\n          className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\n          style={{\n            boxShadow:\n              'rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px',\n            backgroundColor: 'rgb(255, 68, 0)',\n            color: 'white',\n            lineHeight: '1',\n            padding: '0.25em',\n          }}\n        >\n          {title}\n        </h1>\n        <h3\n          className=\"has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n          style={{\n            boxShadow:\n              'rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px',\n            backgroundColor: 'rgb(255, 68, 0)',\n            color: 'white',\n            lineHeight: '1',\n            padding: '0.25em',\n          }}\n        >\n          {subheading}\n        </h3>\n      </div>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              <div className=\"content\">\n                <div className=\"content\">\n                  <div className=\"tile\">\n                    <h1 className=\"title\">{mainpitch.title}</h1>\n                  </div>\n                  <div className=\"tile\">\n                    <h3 className=\"subtitle\">{mainpitch.description}</h3>\n                  </div>\n                </div>\n                <div className=\"columns\">\n                  <div className=\"column is-12\">\n                    <h3 className=\"has-text-weight-semibold is-size-2\">\n                      {heading}\n                    </h3>\n                    <p>{description}</p>\n                  </div>\n                </div>\n                <Features gridItems={intro.blurbs} />\n                <div className=\"columns\">\n                  <div className=\"column is-12 has-text-centered\">\n                    <Link className=\"btn\" to=\"/products\">\n                      See all products\n                    </Link>\n                  </div>\n                </div>\n                <div className=\"column is-12\">\n                  <h3 className=\"has-text-weight-semibold is-size-2\">\n                    Latest stories\n                  </h3>\n                  <BlogRoll />\n                  <div className=\"column is-12 has-text-centered\">\n                    <Link className=\"btn\" to=\"/blog\">\n                      Read more\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n)\n\nIndexPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  subheading: PropTypes.string,\n  mainpitch: PropTypes.object,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n}\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        subheading={frontmatter.subheading}\n        mainpitch={frontmatter.mainpitch}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n      />\n    </Layout>\n  )\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        heading\n        subheading\n        mainpitch {\n          title\n          description\n        }\n        description\n        intro {\n          blurbs {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 240, quality: 64) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            text\n          }\n          heading\n          description\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline\">\n    {gridItems.map(item => (\n      <div key={item.text} className=\"column is-6\">\n        <section className=\"section\">\n          <div className=\"has-text-centered\">\n            <div\n              style={{\n                width: '240px',\n                display: 'inline-block',\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item} />\n            </div>\n          </div>\n          <p>{item.text}</p>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n    })\n  ),\n}\n\nexport default FeatureGrid\n"],"sourceRoot":""}